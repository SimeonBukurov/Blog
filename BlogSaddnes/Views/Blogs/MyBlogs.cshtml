@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@model IEnumerable<BlogSaddnes.Models.Blog>

@{
    ViewData["Title"] = "My Blogs";
    var currentUserId = UserManager.GetUserId(User);
}

<h1>My Blogs</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Owner)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Owner!.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
                <td>
                <form asp-action="MyBlogPosts" asp-controller="Posts" method="post">
                        <input type="submit" class="btn btn-primary" value="Posts">
                        <input type="hidden" name="BlogId" id="BlogId" value="@item.Id">
                        <input type="hidden" name="OwnerId" id="OwnerId" value="@currentUserId">
                    </form>
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
