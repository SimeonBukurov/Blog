@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@model IEnumerable<BlogSaddnes.Models.Post>

@{
    ViewData["Title"] = "All Posts";
    var currentUserId = UserManager.GetUserId(User);
}

<h1>All Posts</h1>

@if (SignInManager.IsSignedIn(User))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Blog)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
                <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author!.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Blog!.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            @if (SignInManager.IsSignedIn(User))
                {
                    <td>                     
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                        @if (User.IsInRole("Administrator"))
                            {
                            
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            
                            }
                    </td>
                    
                }
            
        </tr>
}
    </tbody>
</table>
